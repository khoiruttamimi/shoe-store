swagger: '2.0'
info:
  description: This is a Shoe Store API
  version: 1.0.0
  title: Shoe Store App API
  # put the contact info for your development or API team
  contact:
    email: m.khoiruttamimi@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: users
- name: brands
- name: products
- name: transactions
- name: wishlist

paths:
  /users:
    post:
      tags: 
        - users
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          type: object
          properties: 
            name: 
              type: string
            phone:
              type: string
            password: 
              type: string
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                type: object
                properties: 
                  id: 
                    type: integer
                  name: 
                    type: string
                  role:
                    type: string
                  token: 
                    type: string
        400:
          description: bad input parameter
  /users/login:
    post:
      tags:
      - users
      produces:
      - application/json
      parameters:
      - in: body
        name: login
        schema: 
          type: object
          properties:
            phone: 
              type: string
            password: 
              type: string
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                type: object
                properties: 
                  id: 
                    type: integer
                  name: 
                    type: string
                  role:
                    type: string
                  token: 
                    type: string
        400:
          description: bad input parameter
  /users/profile:
    get:
      tags:
      - users
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/User'
        400:
          description: bad input parameter
    put:
      tags: 
      - users
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          type: object
          properties:
            name:
              type: string
              example: Joko
            phone:
              type: string
              example: 0877677656567
            dob:
              type: string
              format: date
              example: 2016-08-29
            gender:
              type: string
              example: M
            address:
              type: string
              example: jl in aja
      responses:
        200:
          description: success edit response
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/User'
        400:
          description: bad input parameter
    
  /brands:
    post:
      tags: 
        - brands
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: brand
        schema:
          type: object
          properties:
            name: 
              type: string
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/Brand'
        400:
          description: bad input parameter
    get:
      tags:
      - brands
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Brand'
        400:
          description: bad input parameter
  /products:
    post:
      tags: 
        - products
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          type: object
          properties: 
            code: 
              type: string
            name: 
              type: string
            description:
              type: string
            brand_id: 
              type: integer
            price: 
              type: integer
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/Products'
        400:
          description: bad input parameter
    put:
      tags: 
      - products
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          type: object
          properties:
            code: 
              type: string
            name: 
              type: string
            description:
              type: string
            brand_id: 
              type: integer
            price: 
              type: integer
      responses:
        200:
          description: success edit response
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/Products'
        400:
          description: bad input parameter

    get:
      tags:
      - products
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Products'
        400:
          description: bad input parameter

  /products/:id:
    get:
      tags:
      - products
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/Products'
        400:
          description: bad input parameter

  /transactions:
    post:
      tags: 
        - transactions
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          type: array
          items: 
            type: object
            properties:
              product_id:
                type: integer
              qty:
                type: integer
              product_price:
                type: integer
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/Transactions'
        400:
          description: bad input parameter
    
    get:
      tags:
      - transactions
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Transactions'
        400:
          description: bad input parameter

  /transactions/:id:
    get:
      tags:
      - transactions
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/Transactions'
        400:
          description: bad input parameter
  /wishlist:
    post:
      tags: 
        - wishlist
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema: 
          type: object
          properties:
            product_id:
              type: integer
            qty:
              type: integer
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                $ref: '#/definitions/Wishlist'
        400:
          description: bad input parameter
    
    get:
      tags:
      - wishlist
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              meta: 
                type: object
                properties:
                  rc:
                    type: integer
                  message:
                    type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Wishlist'
        400:
          description: bad input parameter

    
definitions:
  User:
    type: object
    required:
    - name
    - dob
    - gender
    - role
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Joko
      phone:
        type: string
        example: 0986676987878
      dob:
        type: string
        format: date
        example: 2016-08-29
      gender:
        type: string
        example: M
      address:
        type: string
        example: jl in aja
      role:
        type: string
        example: customer
      status:
        type: boolean
        example: true
      updated_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
      created_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
  Products:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      brand_id:
        type: integer
        format: int64
        example: 1
      code:
        type: string
        example: c01
      name:
        type: string
        example: sepatu
      status:
        type: boolean
        example: true
      updated_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
      created_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
  Brand:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: adidas
      updated_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
      created_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z

  Transactions:
    type: object
    properties:
      id:
        type: integer
      user_id: 
        type: integer
      user_name:
        type: string
      status:
        type: string
      total_qty:
        type: integer
      total_price:
        type: integer
      transaction_items:
        type: array
        items:
          type: object
          properties:
            transaction_id:
              type: integer
            product_id:
              type: integer
            product_name:
              type: string
            qty:
              type: integer
            base_price:
              type: integer
            total_price:
              type: integer
  Wishlist:
    type: object
    properties:
      id:
        type: integer
      user_id: 
        type: integer
      product_id: 
        type: integer
      product_name:
        type: string
      status:
        type: string
      qty:
        type: integer
      base_price:
        type: integer
      total_price:
        type: integer
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /khoiruttamimi/shoe-store/1.0.0
schemes:
 - https