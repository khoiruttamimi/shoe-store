swagger: '2.0'
info:
  description: This is a Shoe Store API
  version: 1.0.0
  title: Shoe Store App API
  # put the contact info for your development or API team
  contact:
    email: m.khoiruttamimi@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
- name: admins
  description: Admin can add product
- name: customers
  description: Customer can't add product

paths:
  /users:
    post:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
    get:
      tags:
      - admins
      summary: searches users
      produces:
      - application/json
      parameters:
      - in: query
        name: search
        required: false
        type: string
      - in: query
        name: page
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/User'
        400:
          description: bad input parameter
  /users/:id:
    get:
      tags:
      - admins
      - customers
      summary: get detail
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                $ref: '#/definitions/User'
        400:
          description: bad input parameter
    put:
      tags: 
      - admins
      - customers
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: success edit response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
    delete:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: success delete response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
  /product:
    post:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: product
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
    get:
      tags:
      - admins
      - customers
      summary: searches product
      produces:
      - application/json
      parameters:
      - in: query
        name: search
        required: false
        type: string
      - in: query
        name: page
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Product'
        400:
          description: bad input parameter
  /product/:id:
    get:
      tags:
      - admins
      - customers
      summary: get detail
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                $ref: '#/definitions/Product'
        400:
          description: bad input parameter
    put:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: product
        schema:
          $ref: '#/definitions/Product'
      responses:
        200:
          description: success edit response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
    delete:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: success delete response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
  /brand:
    post:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: brand
        schema:
          $ref: '#/definitions/Brand'
      responses:
        200:
          description: success add response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
    get:
      tags:
      - admins
      summary: searches brand
      produces:
      - application/json
      parameters:
      - in: query
        name: search
        required: false
        type: string
      - in: query
        name: page
        type: integer
        format: int32
        minimum: 0
      - in: query
        name: limit
        type: integer
        format: int32
        minimum: 0
        maximum: 50
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: array
                items:
                  $ref: '#/definitions/Brand'
        400:
          description: bad input parameter
  /brand/:id:
    get:
      tags:
      - admins
      summary: get detail
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                $ref: '#/definitions/Product'
        400:
          description: bad input parameter
    put:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: brand
        schema:
          $ref: '#/definitions/Brand'
      responses:
        200:
          description: success edit response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
    delete:
      tags: 
        - admins
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: success delete response
          schema:
            type: object
            properties: 
              code: 
                type: integer
              status:
                type: string
              message: 
                type: string
              data: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        400:
          description: bad input parameter
definitions:
  User:
    type: object
    required:
    - id
    - name
    - dob
    - gender
    - role
    - password
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: Joko
      dob:
        type: string
        format: date
        example: 2016-08-29
      gender:
        type: string
        example: M
      role:
        type: string
        example: customer
      status:
        type: boolean
        example: true
      password:
        type: string
        example: Mfsa33arq33387asdgad
      updated_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
      created_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
  Product:
    type: object
    required:
    - id
    - product_brand_id
    - code
    - name
    - status
    properties:
      id:
        type: integer
        format: int64
        example: 1
      product_brand_id:
        type: integer
        format: int64
        example: 1
      code:
        type: string
        example: c01
      name:
        type: string
        example: sepatu
      status:
        type: boolean
        example: true
      updated_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
      created_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
  Brand:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: sepatu
      updated_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
      created_at:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001Z
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /khoiruttamimi/shoe-store/1.0.0
schemes:
 - https